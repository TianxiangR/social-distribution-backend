openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/delete_user/{id}:
    delete:
      operationId: api_delete_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/follows:
    get:
      operationId: api_follows_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
          description: ''
    put:
      operationId: api_follows_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Follow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Follow'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
          description: ''
    delete:
      operationId: api_follows_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/get_likes_for_user/{id}:
    get:
      operationId: api_get_likes_for_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/get_user/{id}:
    get:
      operationId: api_get_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/posts/:
    get:
      operationId: api_posts_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostListItem'
          description: ''
    put:
      operationId: api_posts_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/posts/{post_id}:
    get:
      operationId: api_posts_retrieve
      parameters:
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    post:
      operationId: api_posts_create
      parameters:
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: api_posts_destroy
      parameters:
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/posts/{post_id}/comments/:
    get:
      operationId: api_posts_comments_retrieve
      parameters:
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: api_posts_comments_update
      parameters:
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/posts/{post_id}/comments/{comment_id}:
    get:
      operationId: api_posts_comments_retrieve_2
      parameters:
      - in: path
        name: comment_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: api_posts_comments_create
      parameters:
      - in: path
        name: comment_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: api_posts_comments_destroy
      parameters:
      - in: path
        name: comment_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/posts/{post_id}/comments/{comment_id}/likes:
    put:
      operationId: api_posts_comments_likes_update
      parameters:
      - in: path
        name: comment_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LikeComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LikeComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LikeComment'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikeComment'
          description: ''
    delete:
      operationId: api_posts_comments_likes_destroy
      parameters:
      - in: path
        name: comment_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/posts/{post_id}/likes:
    put:
      operationId: api_posts_likes_update
      parameters:
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LikePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LikePost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LikePost'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikePost'
          description: ''
    delete:
      operationId: api_posts_likes_destroy
      parameters:
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/signup/:
    post:
      operationId: api_signup_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/update_user/{id}:
    post:
      operationId: api_update_user_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Comment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_private:
          type: boolean
        user:
          type: string
          format: uuid
        post:
          type: string
          format: uuid
      required:
      - content
      - created_at
      - id
      - post
      - user
    Follow:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        follower:
          type: string
          format: uuid
        following:
          type: string
          format: uuid
      required:
      - created_at
      - follower
      - following
      - id
    LikeComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
        comment:
          type: string
          format: uuid
      required:
      - comment
      - created_at
      - id
      - user
    LikePost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
        post:
          type: string
          format: uuid
      required:
      - created_at
      - id
      - post
      - user
    Post:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 50
        content:
          type: string
          maxLength: 2000
        image:
          type: string
          format: uri
          nullable: true
        is_private:
          type: boolean
        is_private_to_friends:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        author:
          type: string
          format: uuid
      required:
      - author
      - content
      - created_at
      - id
      - title
      - type
    PostListItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        like_count:
          type: string
          readOnly: true
        comment_count:
          type: string
          readOnly: true
        author_profile_image:
          type: string
          readOnly: true
        author_name:
          type: string
          readOnly: true
        is_liked:
          type: string
          readOnly: true
        is_my_post:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 50
        content:
          type: string
          maxLength: 2000
        image:
          type: string
          format: uri
          nullable: true
        is_private:
          type: boolean
        is_private_to_friends:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        author:
          type: string
          format: uuid
      required:
      - author
      - author_name
      - author_profile_image
      - comment_count
      - content
      - created_at
      - id
      - is_liked
      - is_my_post
      - like_count
      - title
      - type
    TypeEnum:
      enum:
      - text/plain
      - text/markdown
      type: string
      description: |-
        * `text/plain` - text/plain
        * `text/markdown` - text/markdown
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
